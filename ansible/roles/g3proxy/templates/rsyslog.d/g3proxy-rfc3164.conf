
module(load="imudp" Threads="4")
module(load="mmjsonparse")

input(type="imudp"
      Address="127.0.0.1"
      Port="{{ proxy_log_udp_port }}"
      Ruleset="g3proxy"
      RcvBufSize="1m")

# output filename templates
template(name="ProxyTaskLogFile" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/task_%$.sd!server_name%_%$.sd!task_type%.log")
template(name="ProxyTaskLogDrop" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/task_%$.sd!server_name%_drop.log")
template(name="ProxyEscapeLogFile" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/escape_%$.sd!escaper_name%_%$.sd!escape_type%_err.log")
template(name="ProxyEscapeLogDrop" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/escape_%$.sd!escaper_name%_drop.log")
template(name="ProxyResolveLogFile" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/resolve_%$.sd!resolver_name%_err.log")
template(name="ProxyResolveLogDrop" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/resolve_%$.sd!resolver_name%_drop.log")
template(name="ProxyInspectLogFile" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/inspect_%$.sd!auditor_name%.log")
template(name="ProxyInterceptLogFile" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/intercept_%$.sd!auditor_name%_%$.sd!intercept_type%.log")
template(name="ProxyInterceptLogDrop" type="string"
         string="{{ proxy_log_dir }}/%$.sd!daemon_name%/intercept_%$.sd!auditor_name%_drop.log")

# output format templates
template(name="LocalJsonDump" type="list") {
    constant(value="{ ")
    property(outname="timereported" name="timereported" DateFormat="rfc3339" format="jsonf")
    constant(value=", \"sd\": ")
    property(name="$!")
    constant(value=" }\n")
}
template(name="LocalMsgDump" type="string" string="timereported: %timereported:::date-rfc3339%, sd: %$!%, msg: %msg%\n")

template(name="RawMsgDump" type="string" string="%rawmsg%")

ruleset(name="g3proxy"
        queue.type="FixedArray"
        queue.size="250000"
        queue.dequeueBatchSize="4096"
        queue.workerThreads="4"
        queue.workerThreadMinimumMessages="60000"
       ) {
    action(type="mmjsonparse")
    set $.sd!daemon_name = $!daemon_name;
    if ($!log_type == "Task") then {
        set $.sd!server_name = $!server_name;
        set $.sd!task_type = $!task_type;
        if $.sd!task_type != "" then {
            action(type="omfile" dynafile="ProxyTaskLogFile" dynaFileCacheSize="10" template="LocalJsonDump")
        } else {
            action(type="omfile" dynafile="ProxyTaskLogDrop" dynaFileCacheSize="10" template="LocalMsgDump")
        }
    } else if ($!log_type == "Escape") then {
        set $.sd!escaper_name = $!escaper_name;
        set $.sd!escape_type = $!escape_type;
        if $.sd!escape_type != "" then {
            action(type="omfile" dynafile="ProxyEscapeLogFile" dynaFileCacheSize="10" template="LocalJsonDump")
        } else {
            action(type="omfile" dynafile="ProxyEscapeLogDrop" dynaFileCacheSize="10" template="LocalMsgDump")
        }
    } else if ($!log_type == "Resolve") then {
        set $.sd!resolver_name = $!resolver_name;
        set $.sd!error_type = $!error_type;
        if $.sd!error_type != "" then {
            action(type="omfile" dynafile="ProxyResolveLogFile" dynaFileCacheSize="10" template="LocalJsonDump")
        } else {
            action(type="omfile" dynafile="ProxyResolveLogDrop" dynaFileCacheSize="10" template="LocalMsgDump")
        }
    } else if ($!log_type == "Inspect") then {
        set $.sd!auditor_name = $!auditor_name;
        action(type="omfile" dynafile="ProxyInspectLogFile" dynaFileCacheSize="10" template="LocalJsonDump")
    } else if ($!log_type == "Intercept") then {
        set $.sd!auditor_name = $!auditor_name;
        set $.sd!intercept_type = $!intercept_type;
        if $.sd!intercept_type != "" then {
            action(type="omfile" dynafile="ProxyInterceptLogFile" dynaFileCacheSize="10" template="LocalJsonDump")
        } else {
            action(type="omfile" dynafile="ProxyInterceptLogDrop" dynaFileCacheSize="10" template="LocalMsgDump")
        }
    }
    stop
}


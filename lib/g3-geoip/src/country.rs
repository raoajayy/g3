/*
 * Copyright 2023 ByteDance and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

///
/// This file is auto generated by scripts/generate/country/convert.sh,
/// by using the data from https://download.geonames.org/export/dump/countryInfo.txt
///
use std::str::FromStr;

pub enum ISO3166Alpha2CountryCode {
    AD,
    AE,
    AF,
    AG,
    AI,
    AL,
    AM,
    AO,
    AQ,
    AR,
    AS,
    AT,
    AU,
    AW,
    AX,
    AZ,
    BA,
    BB,
    BD,
    BE,
    BF,
    BG,
    BH,
    BI,
    BJ,
    BL,
    BM,
    BN,
    BO,
    BQ,
    BR,
    BS,
    BT,
    BV,
    BW,
    BY,
    BZ,
    CA,
    CC,
    CD,
    CF,
    CG,
    CH,
    CI,
    CK,
    CL,
    CM,
    CN,
    CO,
    CR,
    CU,
    CV,
    CW,
    CX,
    CY,
    CZ,
    DE,
    DJ,
    DK,
    DM,
    DO,
    DZ,
    EC,
    EE,
    EG,
    EH,
    ER,
    ES,
    ET,
    FI,
    FJ,
    FK,
    FM,
    FO,
    FR,
    GA,
    GB,
    GD,
    GE,
    GF,
    GG,
    GH,
    GI,
    GL,
    GM,
    GN,
    GP,
    GQ,
    GR,
    GS,
    GT,
    GU,
    GW,
    GY,
    HK,
    HM,
    HN,
    HR,
    HT,
    HU,
    ID,
    IE,
    IL,
    IM,
    IN,
    IO,
    IQ,
    IR,
    IS,
    IT,
    JE,
    JM,
    JO,
    JP,
    KE,
    KG,
    KH,
    KI,
    KM,
    KN,
    KP,
    KR,
    XK,
    KW,
    KY,
    KZ,
    LA,
    LB,
    LC,
    LI,
    LK,
    LR,
    LS,
    LT,
    LU,
    LV,
    LY,
    MA,
    MC,
    MD,
    ME,
    MF,
    MG,
    MH,
    MK,
    ML,
    MM,
    MN,
    MO,
    MP,
    MQ,
    MR,
    MS,
    MT,
    MU,
    MV,
    MW,
    MX,
    MY,
    MZ,
    NA,
    NC,
    NE,
    NF,
    NG,
    NI,
    NL,
    NO,
    NP,
    NR,
    NU,
    NZ,
    OM,
    PA,
    PE,
    PF,
    PG,
    PH,
    PK,
    PL,
    PM,
    PN,
    PR,
    PS,
    PT,
    PW,
    PY,
    QA,
    RE,
    RO,
    RS,
    RU,
    RW,
    SA,
    SB,
    SC,
    SD,
    SS,
    SE,
    SG,
    SH,
    SI,
    SJ,
    SK,
    SL,
    SM,
    SN,
    SO,
    SR,
    ST,
    SV,
    SX,
    SY,
    SZ,
    TC,
    TD,
    TF,
    TG,
    TH,
    TJ,
    TK,
    TL,
    TM,
    TN,
    TO,
    TR,
    TT,
    TV,
    TW,
    TZ,
    UA,
    UG,
    UM,
    US,
    UY,
    UZ,
    VA,
    VC,
    VE,
    VG,
    VI,
    VN,
    VU,
    WF,
    WS,
    YE,
    YT,
    ZA,
    ZM,
    ZW,
    CS,
    AN,
}

impl ISO3166Alpha2CountryCode {
    pub fn name(&self) -> &'static str {
        match self {
            ISO3166Alpha2CountryCode::AD => "Andorra",
            ISO3166Alpha2CountryCode::AE => "United Arab Emirates",
            ISO3166Alpha2CountryCode::AF => "Afghanistan",
            ISO3166Alpha2CountryCode::AG => "Antigua and Barbuda",
            ISO3166Alpha2CountryCode::AI => "Anguilla",
            ISO3166Alpha2CountryCode::AL => "Albania",
            ISO3166Alpha2CountryCode::AM => "Armenia",
            ISO3166Alpha2CountryCode::AO => "Angola",
            ISO3166Alpha2CountryCode::AQ => "Antarctica",
            ISO3166Alpha2CountryCode::AR => "Argentina",
            ISO3166Alpha2CountryCode::AS => "American Samoa",
            ISO3166Alpha2CountryCode::AT => "Austria",
            ISO3166Alpha2CountryCode::AU => "Australia",
            ISO3166Alpha2CountryCode::AW => "Aruba",
            ISO3166Alpha2CountryCode::AX => "Aland Islands",
            ISO3166Alpha2CountryCode::AZ => "Azerbaijan",
            ISO3166Alpha2CountryCode::BA => "Bosnia and Herzegovina",
            ISO3166Alpha2CountryCode::BB => "Barbados",
            ISO3166Alpha2CountryCode::BD => "Bangladesh",
            ISO3166Alpha2CountryCode::BE => "Belgium",
            ISO3166Alpha2CountryCode::BF => "Burkina Faso",
            ISO3166Alpha2CountryCode::BG => "Bulgaria",
            ISO3166Alpha2CountryCode::BH => "Bahrain",
            ISO3166Alpha2CountryCode::BI => "Burundi",
            ISO3166Alpha2CountryCode::BJ => "Benin",
            ISO3166Alpha2CountryCode::BL => "Saint Barthelemy",
            ISO3166Alpha2CountryCode::BM => "Bermuda",
            ISO3166Alpha2CountryCode::BN => "Brunei",
            ISO3166Alpha2CountryCode::BO => "Bolivia",
            ISO3166Alpha2CountryCode::BQ => "Bonaire, Saint Eustatius and Saba ",
            ISO3166Alpha2CountryCode::BR => "Brazil",
            ISO3166Alpha2CountryCode::BS => "Bahamas",
            ISO3166Alpha2CountryCode::BT => "Bhutan",
            ISO3166Alpha2CountryCode::BV => "Bouvet Island",
            ISO3166Alpha2CountryCode::BW => "Botswana",
            ISO3166Alpha2CountryCode::BY => "Belarus",
            ISO3166Alpha2CountryCode::BZ => "Belize",
            ISO3166Alpha2CountryCode::CA => "Canada",
            ISO3166Alpha2CountryCode::CC => "Cocos Islands",
            ISO3166Alpha2CountryCode::CD => "Democratic Republic of the Congo",
            ISO3166Alpha2CountryCode::CF => "Central African Republic",
            ISO3166Alpha2CountryCode::CG => "Republic of the Congo",
            ISO3166Alpha2CountryCode::CH => "Switzerland",
            ISO3166Alpha2CountryCode::CI => "Ivory Coast",
            ISO3166Alpha2CountryCode::CK => "Cook Islands",
            ISO3166Alpha2CountryCode::CL => "Chile",
            ISO3166Alpha2CountryCode::CM => "Cameroon",
            ISO3166Alpha2CountryCode::CN => "China",
            ISO3166Alpha2CountryCode::CO => "Colombia",
            ISO3166Alpha2CountryCode::CR => "Costa Rica",
            ISO3166Alpha2CountryCode::CU => "Cuba",
            ISO3166Alpha2CountryCode::CV => "Cabo Verde",
            ISO3166Alpha2CountryCode::CW => "Curacao",
            ISO3166Alpha2CountryCode::CX => "Christmas Island",
            ISO3166Alpha2CountryCode::CY => "Cyprus",
            ISO3166Alpha2CountryCode::CZ => "Czechia",
            ISO3166Alpha2CountryCode::DE => "Germany",
            ISO3166Alpha2CountryCode::DJ => "Djibouti",
            ISO3166Alpha2CountryCode::DK => "Denmark",
            ISO3166Alpha2CountryCode::DM => "Dominica",
            ISO3166Alpha2CountryCode::DO => "Dominican Republic",
            ISO3166Alpha2CountryCode::DZ => "Algeria",
            ISO3166Alpha2CountryCode::EC => "Ecuador",
            ISO3166Alpha2CountryCode::EE => "Estonia",
            ISO3166Alpha2CountryCode::EG => "Egypt",
            ISO3166Alpha2CountryCode::EH => "Western Sahara",
            ISO3166Alpha2CountryCode::ER => "Eritrea",
            ISO3166Alpha2CountryCode::ES => "Spain",
            ISO3166Alpha2CountryCode::ET => "Ethiopia",
            ISO3166Alpha2CountryCode::FI => "Finland",
            ISO3166Alpha2CountryCode::FJ => "Fiji",
            ISO3166Alpha2CountryCode::FK => "Falkland Islands",
            ISO3166Alpha2CountryCode::FM => "Micronesia",
            ISO3166Alpha2CountryCode::FO => "Faroe Islands",
            ISO3166Alpha2CountryCode::FR => "France",
            ISO3166Alpha2CountryCode::GA => "Gabon",
            ISO3166Alpha2CountryCode::GB => "United Kingdom",
            ISO3166Alpha2CountryCode::GD => "Grenada",
            ISO3166Alpha2CountryCode::GE => "Georgia",
            ISO3166Alpha2CountryCode::GF => "French Guiana",
            ISO3166Alpha2CountryCode::GG => "Guernsey",
            ISO3166Alpha2CountryCode::GH => "Ghana",
            ISO3166Alpha2CountryCode::GI => "Gibraltar",
            ISO3166Alpha2CountryCode::GL => "Greenland",
            ISO3166Alpha2CountryCode::GM => "Gambia",
            ISO3166Alpha2CountryCode::GN => "Guinea",
            ISO3166Alpha2CountryCode::GP => "Guadeloupe",
            ISO3166Alpha2CountryCode::GQ => "Equatorial Guinea",
            ISO3166Alpha2CountryCode::GR => "Greece",
            ISO3166Alpha2CountryCode::GS => "South Georgia and the South Sandwich Islands",
            ISO3166Alpha2CountryCode::GT => "Guatemala",
            ISO3166Alpha2CountryCode::GU => "Guam",
            ISO3166Alpha2CountryCode::GW => "Guinea-Bissau",
            ISO3166Alpha2CountryCode::GY => "Guyana",
            ISO3166Alpha2CountryCode::HK => "Hong Kong",
            ISO3166Alpha2CountryCode::HM => "Heard Island and McDonald Islands",
            ISO3166Alpha2CountryCode::HN => "Honduras",
            ISO3166Alpha2CountryCode::HR => "Croatia",
            ISO3166Alpha2CountryCode::HT => "Haiti",
            ISO3166Alpha2CountryCode::HU => "Hungary",
            ISO3166Alpha2CountryCode::ID => "Indonesia",
            ISO3166Alpha2CountryCode::IE => "Ireland",
            ISO3166Alpha2CountryCode::IL => "Israel",
            ISO3166Alpha2CountryCode::IM => "Isle of Man",
            ISO3166Alpha2CountryCode::IN => "India",
            ISO3166Alpha2CountryCode::IO => "British Indian Ocean Territory",
            ISO3166Alpha2CountryCode::IQ => "Iraq",
            ISO3166Alpha2CountryCode::IR => "Iran",
            ISO3166Alpha2CountryCode::IS => "Iceland",
            ISO3166Alpha2CountryCode::IT => "Italy",
            ISO3166Alpha2CountryCode::JE => "Jersey",
            ISO3166Alpha2CountryCode::JM => "Jamaica",
            ISO3166Alpha2CountryCode::JO => "Jordan",
            ISO3166Alpha2CountryCode::JP => "Japan",
            ISO3166Alpha2CountryCode::KE => "Kenya",
            ISO3166Alpha2CountryCode::KG => "Kyrgyzstan",
            ISO3166Alpha2CountryCode::KH => "Cambodia",
            ISO3166Alpha2CountryCode::KI => "Kiribati",
            ISO3166Alpha2CountryCode::KM => "Comoros",
            ISO3166Alpha2CountryCode::KN => "Saint Kitts and Nevis",
            ISO3166Alpha2CountryCode::KP => "North Korea",
            ISO3166Alpha2CountryCode::KR => "South Korea",
            ISO3166Alpha2CountryCode::XK => "Kosovo",
            ISO3166Alpha2CountryCode::KW => "Kuwait",
            ISO3166Alpha2CountryCode::KY => "Cayman Islands",
            ISO3166Alpha2CountryCode::KZ => "Kazakhstan",
            ISO3166Alpha2CountryCode::LA => "Laos",
            ISO3166Alpha2CountryCode::LB => "Lebanon",
            ISO3166Alpha2CountryCode::LC => "Saint Lucia",
            ISO3166Alpha2CountryCode::LI => "Liechtenstein",
            ISO3166Alpha2CountryCode::LK => "Sri Lanka",
            ISO3166Alpha2CountryCode::LR => "Liberia",
            ISO3166Alpha2CountryCode::LS => "Lesotho",
            ISO3166Alpha2CountryCode::LT => "Lithuania",
            ISO3166Alpha2CountryCode::LU => "Luxembourg",
            ISO3166Alpha2CountryCode::LV => "Latvia",
            ISO3166Alpha2CountryCode::LY => "Libya",
            ISO3166Alpha2CountryCode::MA => "Morocco",
            ISO3166Alpha2CountryCode::MC => "Monaco",
            ISO3166Alpha2CountryCode::MD => "Moldova",
            ISO3166Alpha2CountryCode::ME => "Montenegro",
            ISO3166Alpha2CountryCode::MF => "Saint Martin",
            ISO3166Alpha2CountryCode::MG => "Madagascar",
            ISO3166Alpha2CountryCode::MH => "Marshall Islands",
            ISO3166Alpha2CountryCode::MK => "North Macedonia",
            ISO3166Alpha2CountryCode::ML => "Mali",
            ISO3166Alpha2CountryCode::MM => "Myanmar",
            ISO3166Alpha2CountryCode::MN => "Mongolia",
            ISO3166Alpha2CountryCode::MO => "Macao",
            ISO3166Alpha2CountryCode::MP => "Northern Mariana Islands",
            ISO3166Alpha2CountryCode::MQ => "Martinique",
            ISO3166Alpha2CountryCode::MR => "Mauritania",
            ISO3166Alpha2CountryCode::MS => "Montserrat",
            ISO3166Alpha2CountryCode::MT => "Malta",
            ISO3166Alpha2CountryCode::MU => "Mauritius",
            ISO3166Alpha2CountryCode::MV => "Maldives",
            ISO3166Alpha2CountryCode::MW => "Malawi",
            ISO3166Alpha2CountryCode::MX => "Mexico",
            ISO3166Alpha2CountryCode::MY => "Malaysia",
            ISO3166Alpha2CountryCode::MZ => "Mozambique",
            ISO3166Alpha2CountryCode::NA => "Namibia",
            ISO3166Alpha2CountryCode::NC => "New Caledonia",
            ISO3166Alpha2CountryCode::NE => "Niger",
            ISO3166Alpha2CountryCode::NF => "Norfolk Island",
            ISO3166Alpha2CountryCode::NG => "Nigeria",
            ISO3166Alpha2CountryCode::NI => "Nicaragua",
            ISO3166Alpha2CountryCode::NL => "Netherlands",
            ISO3166Alpha2CountryCode::NO => "Norway",
            ISO3166Alpha2CountryCode::NP => "Nepal",
            ISO3166Alpha2CountryCode::NR => "Nauru",
            ISO3166Alpha2CountryCode::NU => "Niue",
            ISO3166Alpha2CountryCode::NZ => "New Zealand",
            ISO3166Alpha2CountryCode::OM => "Oman",
            ISO3166Alpha2CountryCode::PA => "Panama",
            ISO3166Alpha2CountryCode::PE => "Peru",
            ISO3166Alpha2CountryCode::PF => "French Polynesia",
            ISO3166Alpha2CountryCode::PG => "Papua New Guinea",
            ISO3166Alpha2CountryCode::PH => "Philippines",
            ISO3166Alpha2CountryCode::PK => "Pakistan",
            ISO3166Alpha2CountryCode::PL => "Poland",
            ISO3166Alpha2CountryCode::PM => "Saint Pierre and Miquelon",
            ISO3166Alpha2CountryCode::PN => "Pitcairn",
            ISO3166Alpha2CountryCode::PR => "Puerto Rico",
            ISO3166Alpha2CountryCode::PS => "Palestinian Territory",
            ISO3166Alpha2CountryCode::PT => "Portugal",
            ISO3166Alpha2CountryCode::PW => "Palau",
            ISO3166Alpha2CountryCode::PY => "Paraguay",
            ISO3166Alpha2CountryCode::QA => "Qatar",
            ISO3166Alpha2CountryCode::RE => "Reunion",
            ISO3166Alpha2CountryCode::RO => "Romania",
            ISO3166Alpha2CountryCode::RS => "Serbia",
            ISO3166Alpha2CountryCode::RU => "Russia",
            ISO3166Alpha2CountryCode::RW => "Rwanda",
            ISO3166Alpha2CountryCode::SA => "Saudi Arabia",
            ISO3166Alpha2CountryCode::SB => "Solomon Islands",
            ISO3166Alpha2CountryCode::SC => "Seychelles",
            ISO3166Alpha2CountryCode::SD => "Sudan",
            ISO3166Alpha2CountryCode::SS => "South Sudan",
            ISO3166Alpha2CountryCode::SE => "Sweden",
            ISO3166Alpha2CountryCode::SG => "Singapore",
            ISO3166Alpha2CountryCode::SH => "Saint Helena",
            ISO3166Alpha2CountryCode::SI => "Slovenia",
            ISO3166Alpha2CountryCode::SJ => "Svalbard and Jan Mayen",
            ISO3166Alpha2CountryCode::SK => "Slovakia",
            ISO3166Alpha2CountryCode::SL => "Sierra Leone",
            ISO3166Alpha2CountryCode::SM => "San Marino",
            ISO3166Alpha2CountryCode::SN => "Senegal",
            ISO3166Alpha2CountryCode::SO => "Somalia",
            ISO3166Alpha2CountryCode::SR => "Suriname",
            ISO3166Alpha2CountryCode::ST => "Sao Tome and Principe",
            ISO3166Alpha2CountryCode::SV => "El Salvador",
            ISO3166Alpha2CountryCode::SX => "Sint Maarten",
            ISO3166Alpha2CountryCode::SY => "Syria",
            ISO3166Alpha2CountryCode::SZ => "Eswatini",
            ISO3166Alpha2CountryCode::TC => "Turks and Caicos Islands",
            ISO3166Alpha2CountryCode::TD => "Chad",
            ISO3166Alpha2CountryCode::TF => "French Southern Territories",
            ISO3166Alpha2CountryCode::TG => "Togo",
            ISO3166Alpha2CountryCode::TH => "Thailand",
            ISO3166Alpha2CountryCode::TJ => "Tajikistan",
            ISO3166Alpha2CountryCode::TK => "Tokelau",
            ISO3166Alpha2CountryCode::TL => "Timor Leste",
            ISO3166Alpha2CountryCode::TM => "Turkmenistan",
            ISO3166Alpha2CountryCode::TN => "Tunisia",
            ISO3166Alpha2CountryCode::TO => "Tonga",
            ISO3166Alpha2CountryCode::TR => "Turkey",
            ISO3166Alpha2CountryCode::TT => "Trinidad and Tobago",
            ISO3166Alpha2CountryCode::TV => "Tuvalu",
            ISO3166Alpha2CountryCode::TW => "Taiwan",
            ISO3166Alpha2CountryCode::TZ => "Tanzania",
            ISO3166Alpha2CountryCode::UA => "Ukraine",
            ISO3166Alpha2CountryCode::UG => "Uganda",
            ISO3166Alpha2CountryCode::UM => "United States Minor Outlying Islands",
            ISO3166Alpha2CountryCode::US => "United States",
            ISO3166Alpha2CountryCode::UY => "Uruguay",
            ISO3166Alpha2CountryCode::UZ => "Uzbekistan",
            ISO3166Alpha2CountryCode::VA => "Vatican",
            ISO3166Alpha2CountryCode::VC => "Saint Vincent and the Grenadines",
            ISO3166Alpha2CountryCode::VE => "Venezuela",
            ISO3166Alpha2CountryCode::VG => "British Virgin Islands",
            ISO3166Alpha2CountryCode::VI => "U.S. Virgin Islands",
            ISO3166Alpha2CountryCode::VN => "Vietnam",
            ISO3166Alpha2CountryCode::VU => "Vanuatu",
            ISO3166Alpha2CountryCode::WF => "Wallis and Futuna",
            ISO3166Alpha2CountryCode::WS => "Samoa",
            ISO3166Alpha2CountryCode::YE => "Yemen",
            ISO3166Alpha2CountryCode::YT => "Mayotte",
            ISO3166Alpha2CountryCode::ZA => "South Africa",
            ISO3166Alpha2CountryCode::ZM => "Zambia",
            ISO3166Alpha2CountryCode::ZW => "Zimbabwe",
            ISO3166Alpha2CountryCode::CS => "Serbia and Montenegro",
            ISO3166Alpha2CountryCode::AN => "Netherlands Antilles",
        }
    }
}

impl FromStr for ISO3166Alpha2CountryCode {
    type Err = ();

    fn from_str(s: &str) -> Result<Self, Self::Err> {
        match s {
            "AD" | "ad" => Ok(ISO3166Alpha2CountryCode::AD),
            "AE" | "ae" => Ok(ISO3166Alpha2CountryCode::AE),
            "AF" | "af" => Ok(ISO3166Alpha2CountryCode::AF),
            "AG" | "ag" => Ok(ISO3166Alpha2CountryCode::AG),
            "AI" | "ai" => Ok(ISO3166Alpha2CountryCode::AI),
            "AL" | "al" => Ok(ISO3166Alpha2CountryCode::AL),
            "AM" | "am" => Ok(ISO3166Alpha2CountryCode::AM),
            "AO" | "ao" => Ok(ISO3166Alpha2CountryCode::AO),
            "AQ" | "aq" => Ok(ISO3166Alpha2CountryCode::AQ),
            "AR" | "ar" => Ok(ISO3166Alpha2CountryCode::AR),
            "AS" | "as" => Ok(ISO3166Alpha2CountryCode::AS),
            "AT" | "at" => Ok(ISO3166Alpha2CountryCode::AT),
            "AU" | "au" => Ok(ISO3166Alpha2CountryCode::AU),
            "AW" | "aw" => Ok(ISO3166Alpha2CountryCode::AW),
            "AX" | "ax" => Ok(ISO3166Alpha2CountryCode::AX),
            "AZ" | "az" => Ok(ISO3166Alpha2CountryCode::AZ),
            "BA" | "ba" => Ok(ISO3166Alpha2CountryCode::BA),
            "BB" | "bb" => Ok(ISO3166Alpha2CountryCode::BB),
            "BD" | "bd" => Ok(ISO3166Alpha2CountryCode::BD),
            "BE" | "be" => Ok(ISO3166Alpha2CountryCode::BE),
            "BF" | "bf" => Ok(ISO3166Alpha2CountryCode::BF),
            "BG" | "bg" => Ok(ISO3166Alpha2CountryCode::BG),
            "BH" | "bh" => Ok(ISO3166Alpha2CountryCode::BH),
            "BI" | "bi" => Ok(ISO3166Alpha2CountryCode::BI),
            "BJ" | "bj" => Ok(ISO3166Alpha2CountryCode::BJ),
            "BL" | "bl" => Ok(ISO3166Alpha2CountryCode::BL),
            "BM" | "bm" => Ok(ISO3166Alpha2CountryCode::BM),
            "BN" | "bn" => Ok(ISO3166Alpha2CountryCode::BN),
            "BO" | "bo" => Ok(ISO3166Alpha2CountryCode::BO),
            "BQ" | "bq" => Ok(ISO3166Alpha2CountryCode::BQ),
            "BR" | "br" => Ok(ISO3166Alpha2CountryCode::BR),
            "BS" | "bs" => Ok(ISO3166Alpha2CountryCode::BS),
            "BT" | "bt" => Ok(ISO3166Alpha2CountryCode::BT),
            "BV" | "bv" => Ok(ISO3166Alpha2CountryCode::BV),
            "BW" | "bw" => Ok(ISO3166Alpha2CountryCode::BW),
            "BY" | "by" => Ok(ISO3166Alpha2CountryCode::BY),
            "BZ" | "bz" => Ok(ISO3166Alpha2CountryCode::BZ),
            "CA" | "ca" => Ok(ISO3166Alpha2CountryCode::CA),
            "CC" | "cc" => Ok(ISO3166Alpha2CountryCode::CC),
            "CD" | "cd" => Ok(ISO3166Alpha2CountryCode::CD),
            "CF" | "cf" => Ok(ISO3166Alpha2CountryCode::CF),
            "CG" | "cg" => Ok(ISO3166Alpha2CountryCode::CG),
            "CH" | "ch" => Ok(ISO3166Alpha2CountryCode::CH),
            "CI" | "ci" => Ok(ISO3166Alpha2CountryCode::CI),
            "CK" | "ck" => Ok(ISO3166Alpha2CountryCode::CK),
            "CL" | "cl" => Ok(ISO3166Alpha2CountryCode::CL),
            "CM" | "cm" => Ok(ISO3166Alpha2CountryCode::CM),
            "CN" | "cn" => Ok(ISO3166Alpha2CountryCode::CN),
            "CO" | "co" => Ok(ISO3166Alpha2CountryCode::CO),
            "CR" | "cr" => Ok(ISO3166Alpha2CountryCode::CR),
            "CU" | "cu" => Ok(ISO3166Alpha2CountryCode::CU),
            "CV" | "cv" => Ok(ISO3166Alpha2CountryCode::CV),
            "CW" | "cw" => Ok(ISO3166Alpha2CountryCode::CW),
            "CX" | "cx" => Ok(ISO3166Alpha2CountryCode::CX),
            "CY" | "cy" => Ok(ISO3166Alpha2CountryCode::CY),
            "CZ" | "cz" => Ok(ISO3166Alpha2CountryCode::CZ),
            "DE" | "de" => Ok(ISO3166Alpha2CountryCode::DE),
            "DJ" | "dj" => Ok(ISO3166Alpha2CountryCode::DJ),
            "DK" | "dk" => Ok(ISO3166Alpha2CountryCode::DK),
            "DM" | "dm" => Ok(ISO3166Alpha2CountryCode::DM),
            "DO" | "do" => Ok(ISO3166Alpha2CountryCode::DO),
            "DZ" | "dz" => Ok(ISO3166Alpha2CountryCode::DZ),
            "EC" | "ec" => Ok(ISO3166Alpha2CountryCode::EC),
            "EE" | "ee" => Ok(ISO3166Alpha2CountryCode::EE),
            "EG" | "eg" => Ok(ISO3166Alpha2CountryCode::EG),
            "EH" | "eh" => Ok(ISO3166Alpha2CountryCode::EH),
            "ER" | "er" => Ok(ISO3166Alpha2CountryCode::ER),
            "ES" | "es" => Ok(ISO3166Alpha2CountryCode::ES),
            "ET" | "et" => Ok(ISO3166Alpha2CountryCode::ET),
            "FI" | "fi" => Ok(ISO3166Alpha2CountryCode::FI),
            "FJ" | "fj" => Ok(ISO3166Alpha2CountryCode::FJ),
            "FK" | "fk" => Ok(ISO3166Alpha2CountryCode::FK),
            "FM" | "fm" => Ok(ISO3166Alpha2CountryCode::FM),
            "FO" | "fo" => Ok(ISO3166Alpha2CountryCode::FO),
            "FR" | "fr" => Ok(ISO3166Alpha2CountryCode::FR),
            "GA" | "ga" => Ok(ISO3166Alpha2CountryCode::GA),
            "GB" | "gb" => Ok(ISO3166Alpha2CountryCode::GB),
            "GD" | "gd" => Ok(ISO3166Alpha2CountryCode::GD),
            "GE" | "ge" => Ok(ISO3166Alpha2CountryCode::GE),
            "GF" | "gf" => Ok(ISO3166Alpha2CountryCode::GF),
            "GG" | "gg" => Ok(ISO3166Alpha2CountryCode::GG),
            "GH" | "gh" => Ok(ISO3166Alpha2CountryCode::GH),
            "GI" | "gi" => Ok(ISO3166Alpha2CountryCode::GI),
            "GL" | "gl" => Ok(ISO3166Alpha2CountryCode::GL),
            "GM" | "gm" => Ok(ISO3166Alpha2CountryCode::GM),
            "GN" | "gn" => Ok(ISO3166Alpha2CountryCode::GN),
            "GP" | "gp" => Ok(ISO3166Alpha2CountryCode::GP),
            "GQ" | "gq" => Ok(ISO3166Alpha2CountryCode::GQ),
            "GR" | "gr" => Ok(ISO3166Alpha2CountryCode::GR),
            "GS" | "gs" => Ok(ISO3166Alpha2CountryCode::GS),
            "GT" | "gt" => Ok(ISO3166Alpha2CountryCode::GT),
            "GU" | "gu" => Ok(ISO3166Alpha2CountryCode::GU),
            "GW" | "gw" => Ok(ISO3166Alpha2CountryCode::GW),
            "GY" | "gy" => Ok(ISO3166Alpha2CountryCode::GY),
            "HK" | "hk" => Ok(ISO3166Alpha2CountryCode::HK),
            "HM" | "hm" => Ok(ISO3166Alpha2CountryCode::HM),
            "HN" | "hn" => Ok(ISO3166Alpha2CountryCode::HN),
            "HR" | "hr" => Ok(ISO3166Alpha2CountryCode::HR),
            "HT" | "ht" => Ok(ISO3166Alpha2CountryCode::HT),
            "HU" | "hu" => Ok(ISO3166Alpha2CountryCode::HU),
            "ID" | "id" => Ok(ISO3166Alpha2CountryCode::ID),
            "IE" | "ie" => Ok(ISO3166Alpha2CountryCode::IE),
            "IL" | "il" => Ok(ISO3166Alpha2CountryCode::IL),
            "IM" | "im" => Ok(ISO3166Alpha2CountryCode::IM),
            "IN" | "in" => Ok(ISO3166Alpha2CountryCode::IN),
            "IO" | "io" => Ok(ISO3166Alpha2CountryCode::IO),
            "IQ" | "iq" => Ok(ISO3166Alpha2CountryCode::IQ),
            "IR" | "ir" => Ok(ISO3166Alpha2CountryCode::IR),
            "IS" | "is" => Ok(ISO3166Alpha2CountryCode::IS),
            "IT" | "it" => Ok(ISO3166Alpha2CountryCode::IT),
            "JE" | "je" => Ok(ISO3166Alpha2CountryCode::JE),
            "JM" | "jm" => Ok(ISO3166Alpha2CountryCode::JM),
            "JO" | "jo" => Ok(ISO3166Alpha2CountryCode::JO),
            "JP" | "jp" => Ok(ISO3166Alpha2CountryCode::JP),
            "KE" | "ke" => Ok(ISO3166Alpha2CountryCode::KE),
            "KG" | "kg" => Ok(ISO3166Alpha2CountryCode::KG),
            "KH" | "kh" => Ok(ISO3166Alpha2CountryCode::KH),
            "KI" | "ki" => Ok(ISO3166Alpha2CountryCode::KI),
            "KM" | "km" => Ok(ISO3166Alpha2CountryCode::KM),
            "KN" | "kn" => Ok(ISO3166Alpha2CountryCode::KN),
            "KP" | "kp" => Ok(ISO3166Alpha2CountryCode::KP),
            "KR" | "kr" => Ok(ISO3166Alpha2CountryCode::KR),
            "XK" | "xk" => Ok(ISO3166Alpha2CountryCode::XK),
            "KW" | "kw" => Ok(ISO3166Alpha2CountryCode::KW),
            "KY" | "ky" => Ok(ISO3166Alpha2CountryCode::KY),
            "KZ" | "kz" => Ok(ISO3166Alpha2CountryCode::KZ),
            "LA" | "la" => Ok(ISO3166Alpha2CountryCode::LA),
            "LB" | "lb" => Ok(ISO3166Alpha2CountryCode::LB),
            "LC" | "lc" => Ok(ISO3166Alpha2CountryCode::LC),
            "LI" | "li" => Ok(ISO3166Alpha2CountryCode::LI),
            "LK" | "lk" => Ok(ISO3166Alpha2CountryCode::LK),
            "LR" | "lr" => Ok(ISO3166Alpha2CountryCode::LR),
            "LS" | "ls" => Ok(ISO3166Alpha2CountryCode::LS),
            "LT" | "lt" => Ok(ISO3166Alpha2CountryCode::LT),
            "LU" | "lu" => Ok(ISO3166Alpha2CountryCode::LU),
            "LV" | "lv" => Ok(ISO3166Alpha2CountryCode::LV),
            "LY" | "ly" => Ok(ISO3166Alpha2CountryCode::LY),
            "MA" | "ma" => Ok(ISO3166Alpha2CountryCode::MA),
            "MC" | "mc" => Ok(ISO3166Alpha2CountryCode::MC),
            "MD" | "md" => Ok(ISO3166Alpha2CountryCode::MD),
            "ME" | "me" => Ok(ISO3166Alpha2CountryCode::ME),
            "MF" | "mf" => Ok(ISO3166Alpha2CountryCode::MF),
            "MG" | "mg" => Ok(ISO3166Alpha2CountryCode::MG),
            "MH" | "mh" => Ok(ISO3166Alpha2CountryCode::MH),
            "MK" | "mk" => Ok(ISO3166Alpha2CountryCode::MK),
            "ML" | "ml" => Ok(ISO3166Alpha2CountryCode::ML),
            "MM" | "mm" => Ok(ISO3166Alpha2CountryCode::MM),
            "MN" | "mn" => Ok(ISO3166Alpha2CountryCode::MN),
            "MO" | "mo" => Ok(ISO3166Alpha2CountryCode::MO),
            "MP" | "mp" => Ok(ISO3166Alpha2CountryCode::MP),
            "MQ" | "mq" => Ok(ISO3166Alpha2CountryCode::MQ),
            "MR" | "mr" => Ok(ISO3166Alpha2CountryCode::MR),
            "MS" | "ms" => Ok(ISO3166Alpha2CountryCode::MS),
            "MT" | "mt" => Ok(ISO3166Alpha2CountryCode::MT),
            "MU" | "mu" => Ok(ISO3166Alpha2CountryCode::MU),
            "MV" | "mv" => Ok(ISO3166Alpha2CountryCode::MV),
            "MW" | "mw" => Ok(ISO3166Alpha2CountryCode::MW),
            "MX" | "mx" => Ok(ISO3166Alpha2CountryCode::MX),
            "MY" | "my" => Ok(ISO3166Alpha2CountryCode::MY),
            "MZ" | "mz" => Ok(ISO3166Alpha2CountryCode::MZ),
            "NA" | "na" => Ok(ISO3166Alpha2CountryCode::NA),
            "NC" | "nc" => Ok(ISO3166Alpha2CountryCode::NC),
            "NE" | "ne" => Ok(ISO3166Alpha2CountryCode::NE),
            "NF" | "nf" => Ok(ISO3166Alpha2CountryCode::NF),
            "NG" | "ng" => Ok(ISO3166Alpha2CountryCode::NG),
            "NI" | "ni" => Ok(ISO3166Alpha2CountryCode::NI),
            "NL" | "nl" => Ok(ISO3166Alpha2CountryCode::NL),
            "NO" | "no" => Ok(ISO3166Alpha2CountryCode::NO),
            "NP" | "np" => Ok(ISO3166Alpha2CountryCode::NP),
            "NR" | "nr" => Ok(ISO3166Alpha2CountryCode::NR),
            "NU" | "nu" => Ok(ISO3166Alpha2CountryCode::NU),
            "NZ" | "nz" => Ok(ISO3166Alpha2CountryCode::NZ),
            "OM" | "om" => Ok(ISO3166Alpha2CountryCode::OM),
            "PA" | "pa" => Ok(ISO3166Alpha2CountryCode::PA),
            "PE" | "pe" => Ok(ISO3166Alpha2CountryCode::PE),
            "PF" | "pf" => Ok(ISO3166Alpha2CountryCode::PF),
            "PG" | "pg" => Ok(ISO3166Alpha2CountryCode::PG),
            "PH" | "ph" => Ok(ISO3166Alpha2CountryCode::PH),
            "PK" | "pk" => Ok(ISO3166Alpha2CountryCode::PK),
            "PL" | "pl" => Ok(ISO3166Alpha2CountryCode::PL),
            "PM" | "pm" => Ok(ISO3166Alpha2CountryCode::PM),
            "PN" | "pn" => Ok(ISO3166Alpha2CountryCode::PN),
            "PR" | "pr" => Ok(ISO3166Alpha2CountryCode::PR),
            "PS" | "ps" => Ok(ISO3166Alpha2CountryCode::PS),
            "PT" | "pt" => Ok(ISO3166Alpha2CountryCode::PT),
            "PW" | "pw" => Ok(ISO3166Alpha2CountryCode::PW),
            "PY" | "py" => Ok(ISO3166Alpha2CountryCode::PY),
            "QA" | "qa" => Ok(ISO3166Alpha2CountryCode::QA),
            "RE" | "re" => Ok(ISO3166Alpha2CountryCode::RE),
            "RO" | "ro" => Ok(ISO3166Alpha2CountryCode::RO),
            "RS" | "rs" => Ok(ISO3166Alpha2CountryCode::RS),
            "RU" | "ru" => Ok(ISO3166Alpha2CountryCode::RU),
            "RW" | "rw" => Ok(ISO3166Alpha2CountryCode::RW),
            "SA" | "sa" => Ok(ISO3166Alpha2CountryCode::SA),
            "SB" | "sb" => Ok(ISO3166Alpha2CountryCode::SB),
            "SC" | "sc" => Ok(ISO3166Alpha2CountryCode::SC),
            "SD" | "sd" => Ok(ISO3166Alpha2CountryCode::SD),
            "SS" | "ss" => Ok(ISO3166Alpha2CountryCode::SS),
            "SE" | "se" => Ok(ISO3166Alpha2CountryCode::SE),
            "SG" | "sg" => Ok(ISO3166Alpha2CountryCode::SG),
            "SH" | "sh" => Ok(ISO3166Alpha2CountryCode::SH),
            "SI" | "si" => Ok(ISO3166Alpha2CountryCode::SI),
            "SJ" | "sj" => Ok(ISO3166Alpha2CountryCode::SJ),
            "SK" | "sk" => Ok(ISO3166Alpha2CountryCode::SK),
            "SL" | "sl" => Ok(ISO3166Alpha2CountryCode::SL),
            "SM" | "sm" => Ok(ISO3166Alpha2CountryCode::SM),
            "SN" | "sn" => Ok(ISO3166Alpha2CountryCode::SN),
            "SO" | "so" => Ok(ISO3166Alpha2CountryCode::SO),
            "SR" | "sr" => Ok(ISO3166Alpha2CountryCode::SR),
            "ST" | "st" => Ok(ISO3166Alpha2CountryCode::ST),
            "SV" | "sv" => Ok(ISO3166Alpha2CountryCode::SV),
            "SX" | "sx" => Ok(ISO3166Alpha2CountryCode::SX),
            "SY" | "sy" => Ok(ISO3166Alpha2CountryCode::SY),
            "SZ" | "sz" => Ok(ISO3166Alpha2CountryCode::SZ),
            "TC" | "tc" => Ok(ISO3166Alpha2CountryCode::TC),
            "TD" | "td" => Ok(ISO3166Alpha2CountryCode::TD),
            "TF" | "tf" => Ok(ISO3166Alpha2CountryCode::TF),
            "TG" | "tg" => Ok(ISO3166Alpha2CountryCode::TG),
            "TH" | "th" => Ok(ISO3166Alpha2CountryCode::TH),
            "TJ" | "tj" => Ok(ISO3166Alpha2CountryCode::TJ),
            "TK" | "tk" => Ok(ISO3166Alpha2CountryCode::TK),
            "TL" | "tl" => Ok(ISO3166Alpha2CountryCode::TL),
            "TM" | "tm" => Ok(ISO3166Alpha2CountryCode::TM),
            "TN" | "tn" => Ok(ISO3166Alpha2CountryCode::TN),
            "TO" | "to" => Ok(ISO3166Alpha2CountryCode::TO),
            "TR" | "tr" => Ok(ISO3166Alpha2CountryCode::TR),
            "TT" | "tt" => Ok(ISO3166Alpha2CountryCode::TT),
            "TV" | "tv" => Ok(ISO3166Alpha2CountryCode::TV),
            "TW" | "tw" => Ok(ISO3166Alpha2CountryCode::TW),
            "TZ" | "tz" => Ok(ISO3166Alpha2CountryCode::TZ),
            "UA" | "ua" => Ok(ISO3166Alpha2CountryCode::UA),
            "UG" | "ug" => Ok(ISO3166Alpha2CountryCode::UG),
            "UM" | "um" => Ok(ISO3166Alpha2CountryCode::UM),
            "US" | "us" => Ok(ISO3166Alpha2CountryCode::US),
            "UY" | "uy" => Ok(ISO3166Alpha2CountryCode::UY),
            "UZ" | "uz" => Ok(ISO3166Alpha2CountryCode::UZ),
            "VA" | "va" => Ok(ISO3166Alpha2CountryCode::VA),
            "VC" | "vc" => Ok(ISO3166Alpha2CountryCode::VC),
            "VE" | "ve" => Ok(ISO3166Alpha2CountryCode::VE),
            "VG" | "vg" => Ok(ISO3166Alpha2CountryCode::VG),
            "VI" | "vi" => Ok(ISO3166Alpha2CountryCode::VI),
            "VN" | "vn" => Ok(ISO3166Alpha2CountryCode::VN),
            "VU" | "vu" => Ok(ISO3166Alpha2CountryCode::VU),
            "WF" | "wf" => Ok(ISO3166Alpha2CountryCode::WF),
            "WS" | "ws" => Ok(ISO3166Alpha2CountryCode::WS),
            "YE" | "ye" => Ok(ISO3166Alpha2CountryCode::YE),
            "YT" | "yt" => Ok(ISO3166Alpha2CountryCode::YT),
            "ZA" | "za" => Ok(ISO3166Alpha2CountryCode::ZA),
            "ZM" | "zm" => Ok(ISO3166Alpha2CountryCode::ZM),
            "ZW" | "zw" => Ok(ISO3166Alpha2CountryCode::ZW),
            "CS" | "cs" => Ok(ISO3166Alpha2CountryCode::CS),
            "AN" | "an" => Ok(ISO3166Alpha2CountryCode::AN),
            _ => Err(()),
        }
    }
}
